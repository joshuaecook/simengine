                          FGL - A Functional Graph Library
                                    Version 0.20          
                                    October 1997


This file gives some initial informations about the Functional Graph Libray.
The home page of FGL is

  http://www.fernuni-hagen.de/inf/pi4/erwig/fgl

Look at that address to find the most recent informations about FGL.



AIMS AND SCOPE
--------------

The Functional Graph Library (FGL) is a collection of source files intended 
to provide support for functional programs that make use of graphs.  
Currently, FGL is available only for ML (but it is planned to port it to 
Haskell and HUGS in future).  More precisely, FGL runs currently on SML of 
New Jersey, Version 109, although it should, in principle, run on any 
implementation of the 1997 ML Standard.  What makes it currently tied to 
SML/NJ is mainly the use of some library modules and the use of the 
compilation manager CM.

FGL contains interfaces and implementations of functional graphs. Currently,
only directed labeled and unlabeled graphs are supported. In addition to
a set of basic operations on graphs, a few standard graph algorithms
and applications are included. 



DISTRIBUTION
------------

After unpacking the archive you should have the following files and 
directories:

README              this file
INSTALL             installations instructions
COPYRIGHT           copyright notice
src                 source files
doc                 documentation

More information about the contents of the src directory is contained
in the INSTALL notes.



DOCUMENTATION
-------------

The doc subdirectory contains three papers:

icfp97.ps  --  introduction and motivation of functional graphs
ifl97.ps   --  comparing persistent graph implementations
manual.ps  --  the FGL manual



COMMENTS AND CONTRIBUTIONS WELCOME!
-----------------------------------

Please feel encouraged to send any comments and bug reports to:

  erwig@fernuni-hagen.de

I would be happy to include contributions from other people into
the library.


Martin Erwig

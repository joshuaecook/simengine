function varargout = simplot(varargin)
%  SIMPLOT Plots simulation structure or matrices generated by simex
%     Usage:
%     SIMPLOT(XDATA, YDATA, ...)
%     SIMPLOT(XDATA, YDATA, LINEFORMAT, ...)
%     SIMPLOT(MATRIX, ...)
%     SIMPLOT(MATRIX, LINEFORMAT, ...)
%     SIMPLOT(SIMEXOUTPUT, ...)
%     SIMPLOT(SIMEXOUTPUT, LINEFORMAT, ...)
% 
%     Description:
%     SIMPLOT plots simulation output structures generated by SIMEX
%     in the same manner that the PLOT command will plot X-Y data
%     pairs.  SIMPLOT supports both grouped outputs and multiple
%     outputs per structure.
%
%       XDATA is a 1-D vector of time data
%
%       YDATA is a 1-D vector of value data
%
%       LINEFORMAT is the string format used by PLOT to specify
%       line color and line style
%
%       MATRIX is an N by M matrix where the first column is the
%       time and the remaining M-1 are value vectors plotted
%       against time
%
%       SIMEXOUTPUT is an output structure generated by SIMEX that
%       includes fields that are the same type as MATRIX
%
% Copyright 2009,2010 Simatra Modeling Technologies, L.L.C.
% For more information, please visit http://www.simatratechnologies.com
% For additional help, please email support@simatratechnologies.com
%

if nargin == 0 
    error('Simatra:simplot:argumentError', 'Need at least one argument to simplot');
    return
end

% grab the current axes
gcf;
h = gca;
% if hold is not set, clear the figure
%if strcmp(get(h, 'nextplot'),'replace')
%    clf;
%end

% initialize the plotting args
plotargs = {};

% go through each of the arguments..
for i=1:length(varargin)
   item = varargin{i};
   if isnumeric(item)
       dims = size(item);
       if dims(2) == 1 
           plotargs = append(plotargs, item);
       else
           for j=2:dims(2)
               plotargs = append(plotargs, item(:,1));
               plotargs = append(plotargs, item(:,j));
           end
       end
   elseif ischar(item)
       plotargs = append(plotargs, item);
   elseif isstruct(item)
       fields = fieldnames(item);
       for j=1:length(fields)
           field = item.(fields{j});
           if isnumeric(field)
               dims = size(field);
               if dims(2) == 1
                   plotargs = append(plotargs, 1:dims(1));
                   plotargs = append(plotargs, field);
               else
                   for j=2:dims(2)
                       plotargs = append(plotargs, field(:,1));
                       plotargs = append(plotargs, field(:,j));
                   end
               end
           end   
       end
   end
end


% plot the new set of generated arguments
h = plot(plotargs{:});

if nargout > 0
    varargout{1} = h;
end

end

function y = append(x, i)

    y = x;
    y{length(x)+1} = i;

end
